{"id":"concepts/datasource/triggers/pagination","title":"Pagination","contents":"<h1 id=\"pagination\"><a href=\"#pagination\" aria-hidden><span class=\"icon icon-link\"></span></a>Pagination</h1>\n<p>Pagination is a technique we use to split a dataset into chunks, where each chunk is a \"page\".<br>\nThe grid will only render the rows of the page and we can instruct it to move to the previous/next page.</p>\n<p><strong>nGrid</strong> comes with native support for <strong>logical</strong> pagination in 3 flavors:</p>\n<ul>\n<li>\n<p>Synchronous (client side)</p>\n<ul>\n<li>Client Side</li>\n</ul>\n</li>\n<li>\n<p>Asynchronous (server side)</p>\n<ul>\n<li>Page number</li>\n<li>Tokens</li>\n</ul>\n</li>\n</ul>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n \n<strong>Logical Pagination</strong>\n<br>\n\n\nBy \n<strong>logical</strong>\n we mean that \n<strong>pagination</strong>\n is a feature provided by the datasource, it does not care or knows about UI.\n<br>\n\n\n<strong>Pagination</strong>\n provides a method to \"move\" to the next page or query if there is a next page, that is it.\n<br>\n\n\nElsewhere, A UI \n<em>plugin</em>\n might use the above and bind it to a button while implementing some form of UI (i.e. Material, Bootstrap...)\n</blockquote>\n<h2 id=\"synchronousclient-side-pagination\"><a href=\"#synchronousclient-side-pagination\" aria-hidden><span class=\"icon icon-link\"></span></a>Synchronous/Client-Side Pagination</h2>\n<p>Client side pagination is applied when the entire datasource is available offline or fetched once from the server.</p>\n<p>In this scenario the entire logic is handled automatically by datasource, based on pagination configuration input.<br>\nFor example, setting the page size to 50 will create pages with 50 rows (max) each. If the dataset is 1000 we will have 20 pages.</p>\n<h2 id=\"asynchronous-server-side\"><a href=\"#asynchronous-server-side\" aria-hidden><span class=\"icon icon-link\"></span></a>Asynchronous (server side)</h2>\n<p>Server side pagination is applied when the datasource is fetched in chunks, only portions of it are fetched each time.\nFor example, if the entire dataset is 1 million records we might want to fetch 20, 50 or 100 at a time.</p>\n<p>In this mode the developer must provide the data when a page has changed, this is because it requires a call to the server.<br>\n<strong>nGrid</strong> will invoke the <code class=\"language-text\">onTrigger</code> handler with an event object that indicates that the source of the trigger was a pagination\nrequest to fetch a new \"page\" including metadata required for the operation (e.g. the page number to fetch).</p>\n<p>There are 2 types of server side paging which <strong>nGrid</strong> provides support for:</p>\n<h3 id=\"page-number-based\"><a href=\"#page-number-based\" aria-hidden><span class=\"icon icon-link\"></span></a>Page Number based</h3>\n<p>Page Number pagination is used when the server supports returning a page directly, using the page number.<br>\nThis is possible when the server knows the total amount of rows and can extract specific sections from the dataset.</p>\n<p>There are 2 common forms servers might expect:</p>\n<ul>\n<li>Getting the total number of rows per page and the page number</li>\n<li>Getting the row number to start from and the row number to stop at (SKIP &#x26; LIMIT)</li>\n</ul>\n<p>Regardless, it is the same information, transforming from one method to the other is simple math.</p>\n<h3 id=\"token-based\"><a href=\"#token-based\" aria-hidden><span class=\"icon icon-link\"></span></a>Token based</h3>\n<p>Token pagination is used when the server does not support direct page fetching.<br>\nUsually, the server accepts an initial request with the number of rows per page to fetch and from there on\nit will use a token as a reference to the <strong>next</strong> page only.</p>\n<p>Usually, with this approach the total amount of rows/pages is unknown.</p>\n<blockquote>\n<p>These are the 2 most commonly used types, you can provide your own logical unit if you need a unique implementation.</p>\n</blockquote>\n<p>The plugins <a href=\"../../../../plugins/ngrid-material/pagination\">@pebula/ngrid-material/paginator</a> and <a href=\"../../../../plugins/ngrid-bootstrap/pagination\">@pebula/ngrid-bootstrap/pagination</a> are using the pagination logic to implement pagination UI controls.</p>\n"}