{"id":"features/grid/focus-and-selection","title":"Focus And Selection","contents":"<h1 id=\"focus-and-selection\"><a href=\"#focus-and-selection\" aria-hidden><span class=\"icon icon-link\"></span></a>Focus And Selection</h1>\n<p><strong>Focus</strong> and <strong>Range Selection</strong> is supported programmatically (<code class=\"language-text\">ContextApi</code>) and through the UI (mouse/keyboard) using the <code class=\"language-text\">target-events</code> plugin.</p>\n<hr>\n<p>In most cases you will not need to use the API, the <code class=\"language-text\">target-events</code> plugin will usually have everything you need\nincluding focus support via keyboard arrows as well as selection support using arrows &#x26; SHIFT, mouse &#x26; SHIFT, mouse   CTRL and mouse drag.</p>\n<p>You can keep on reading or you can go to the <code class=\"language-text\">target-events</code> page for more details on focus &#x26; selection using the plugin\nYou can keep on reading or you can <a href=\"../../built-in-plugins/target-events\">go to the target-events page</a> for more details on focus &#x26; selection using the plugin</p>\n<hr>\n<h2 id=\"using-the-api\"><a href=\"#using-the-api\" aria-hidden><span class=\"icon icon-link\"></span></a>Using the API</h2>\n<p>The state of the currently focused cell is stored in the context of each cell and managed by the context API.\nWe'll start with direct API manipulation, we use the context API (<code class=\"language-text\">PblNgridContextApi</code>):</p>\n<h3 id=\"focus\"><a href=\"#focus\" aria-hidden><span class=\"icon icon-link\"></span></a>Focus</h3>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">PblNgridContextApi<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n\n  <span class=\"token comment\">/**\n   * The reference to currently focused cell context.\n   * You can retrieve the actual context or context cell using `findRowInView` and / or `findRowInCache`.\n   *\n   * > Note that when virtual scroll is enabled the currently focused cell does not have to exist in the view.\n   * If this is the case `findRowInView` will return undefined, use `findRowInCache` instead.\n   */</span>\n  <span class=\"token keyword\">readonly</span> focusedCell<span class=\"token operator\">:</span> GridDataPoint <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * Focus the provided cell.\n   * If a cell is not provided will un-focus (blur) the currently focused cell (if there is one).\n   * @param cellRef A Reference to the cell\n   * @param markForCheck Mark the row for change detection\n   */</span>\n  <span class=\"token function\">focusCell</span><span class=\"token punctuation\">(</span>cellRef<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CellReference <span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> markForCheck<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>Note that <code class=\"language-text\">CellReference</code> can be an <code class=\"language-text\">HTMLElement</code> of the cell, the context of the cell of a pointer to the cell (<code class=\"language-text\">GridDataPoint</code>)</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">CellReference</span> <span class=\"token operator\">=</span> HTMLElement <span class=\"token operator\">|</span> GridDataPoint <span class=\"token operator\">|</span> PblNgridCellContext<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * A reference to a data cell on the grid.\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">GridDataPoint</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * The row identity.\n   * If the grid was set with an identity property use the value of the identity otherwise, use the location of the row in the datasource.\n   */</span>\n  rowIdent<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * The column index, relative to the column definition set provided to the grid.\n   * Note that this is the absolute position, including hidden columns.\n   */</span>\n  colIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<blockquote>\n<p><code class=\"language-text\">GridDataPoint</code> is also used in other places to point to a cell.</p>\n</blockquote>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n When using \n<code class=\"language-text\">pIndex</code>\n (identity) to define a primary key for your models (which is highly recommended) the \n<code class=\"language-text\">rowIdent</code>\n that should be used is\nthe identity value, otherwise use the index position in the datasource.\n</blockquote>\n<p>Now, using it straight forward:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">gridInstance<span class=\"token punctuation\">.</span>contextApi<span class=\"token punctuation\">.</span><span class=\"token function\">focusCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> rowIdent<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> colIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Set the focus to the cell at 4th row and the 3rd column and mark the row to change detection.</span>\n\n\n<span class=\"token comment\">// To clear the focus: (true is optional);</span>\ngridInstance<span class=\"token punctuation\">.</span>contextApi<span class=\"token punctuation\">.</span><span class=\"token function\">focusCell</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<h3 id=\"range-selection\"><a href=\"#range-selection\" aria-hidden><span class=\"icon icon-link\"></span></a>Range Selection</h3>\n<p>Range selection is similar to focus:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">PblNgridContextApi<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token comment\">/**\n   * The reference to currently selected range of cell's context.\n   * You can retrieve the actual context or context cell using `findRowInView` and / or `findRowInCache`.\n   *\n   * > Note that when virtual scroll is enabled the currently selected cells does not have to exist in the view.\n   * If this is the case `findRowInView` will return undefined, use `findRowInCache` instead.\n   */</span>\n  <span class=\"token keyword\">readonly</span> selectedCells<span class=\"token operator\">:</span> GridDataPoint<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * Select all provided cells.\n   * @param cellRef A Reference to the cell\n   * @param markForCheck Mark the row for change detection\n   * @param clearCurrent Clear the current selection before applying the new selection.\n   * Default to false (add to current).\n   */</span>\n  <span class=\"token function\">selectCells</span><span class=\"token punctuation\">(</span>cellRefs<span class=\"token operator\">:</span> CellReference<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> markForCheck<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> clearCurrent<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * Unselect all provided cells.\n   * If cells are not provided will un-select all currently selected cells.\n   * @param cellRef A Reference to the cell\n   * @param markForCheck Mark the row for change detection\n   */</span>\n  <span class=\"token function\">unselectCells</span><span class=\"token punctuation\">(</span>cellRefs<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CellReference<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> markForCheck<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>There are 2 notable differences:</p>\n<ul>\n<li>We have 2 APIs, one to add/set the range and one to clear it (all or partial).</li>\n<li>We now work with multiple cells and not one (it's a range...)</li>\n</ul>\n<p>The cells within a range does not have to be connected (adjacent), we can have a range that is spread across. The range collection is\nnot organized nor sorted in any way.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n The currently focused cell is also a selected cell.\n</blockquote>\n<p>Now, using it straight forward:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">gridInstance<span class=\"token punctuation\">.</span>contextApi<span class=\"token punctuation\">.</span><span class=\"token function\">selectCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> rowIdent<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> colIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> rowIdent<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> colIndex<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Set the selected range to the cells at 4th row and the 3rd &amp; 4 columns and mark the row to change detection.</span>\n\n\n<span class=\"token comment\">// To clear the entire selection: (true is optional);</span>\ngridInstance<span class=\"token punctuation\">.</span>contextApi<span class=\"token punctuation\">.</span><span class=\"token function\">unselectCells</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// To clear part of the selection: (true is optional);</span>\ngridInstance<span class=\"token punctuation\">.</span>contextApi<span class=\"token punctuation\">.</span><span class=\"token function\">unselectCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> rowIdent<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> colIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<h2 id=\"navigating-with-primary-index-pblcolumnpindex\"><a href=\"#navigating-with-primary-index-pblcolumnpindex\" aria-hidden><span class=\"icon icon-link\"></span></a>Navigating with primary index (<code class=\"language-text\">PblColumn.pIndex</code>)</h2>\n<p>Most of the operations in focus &#x26; selection require a reference to cell (any by that we also get the reference to the row).\nWe saw that <code class=\"language-text\">CellReference</code> is used for that and it can be the cell's <code class=\"language-text\">HTMLElement</code> or direct context instance.</p>\n<p>In most cases, however, you will work with <code class=\"language-text\">GridDataPoint</code> because it is more simple to use and does not require a hard reference to an\nexisting object (<code class=\"language-text\">HTMLElement</code> or <code class=\"language-text\">PblNgridCellContext</code>).</p>\n<p>When a primary index <strong>is not used</strong> providing a reference to a cell is straight-forward:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> cellRef<span class=\"token operator\">:</span> GridDataPoint <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> rowIdent<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> colIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>Both row and col are referenced by their positional index, so <code class=\"language-text\">rowIdent: 3</code> means the 4th item (0 based) in the grid's datasource.</p>\n<p>But how does it work when we do set a primary index (<code class=\"language-text\">pIndex</code>) for example, if our primary index is the social ID field?</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> cellRef<span class=\"token operator\">:</span> GridDataPoint <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> rowIdent<span class=\"token operator\">:</span> <span class=\"token string\">'0879846579'</span><span class=\"token punctuation\">,</span> colIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>Great, now if we want to reference the next or previous column we just modify <code class=\"language-text\">colIndex</code>.\nBut what if we want to get the next or previous row? since <code class=\"language-text\">rowIdent</code> is a key we cant use simple math.\nWe could start searching the datasource, but that's not a good idea as it's an array thus not indexed...</p>\n<p>The API can help us:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">PblNgridContextApi<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token comment\">/**\n   * Try to find a specific row context, using the row identity, in the context cache.\n   * Note that the cache does not hold the context itself but only the state that can later be used to retrieve a context instance. The context instance\n   * is only used as context for rows in view.\n   * @param rowIdentity The row's identity. If a specific identity is used, please provide it otherwise provide the index of the row in the datasource.\n   * @param offset When set, returns the row at the offset from the row with the provided row identity. Can be any numeric value (e.g 5, -6, 4).\n   * @param create Whether to create a new state if the current state does not exist.\n   */</span>\n  <span class=\"token function\">findRowInCache</span><span class=\"token punctuation\">(</span>rowIdentity<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> offset<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> create<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RowContextState<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>And using it:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> cellRef<span class=\"token operator\">:</span> GridDataPoint <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> rowIdent<span class=\"token operator\">:</span> <span class=\"token string\">'0879846579'</span><span class=\"token punctuation\">,</span> colIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rowContextState <span class=\"token operator\">=</span> gridInstance<span class=\"token punctuation\">.</span>contextApi<span class=\"token punctuation\">.</span><span class=\"token function\">findRowInCache</span><span class=\"token punctuation\">(</span>cellRef<span class=\"token punctuation\">.</span>rowIdent<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> newCellRef<span class=\"token operator\">:</span> GridDataPoint <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> rowIdent<span class=\"token operator\">:</span> rowContextState<span class=\"token punctuation\">.</span>identity<span class=\"token punctuation\">,</span> colIndex<span class=\"token operator\">:</span> cellRef<span class=\"token punctuation\">.</span>colIndex <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>We started with a <code class=\"language-text\">GridDataPoint</code> and used it as a relative base point to get the previous row context state.\nWe set <code class=\"language-text\">true</code> in the last parameter to instruct the grid to create a new context state if one does not exist.<br>\nIn the final step we create the new grid data point that is pointing where we want.</p>\n<h2 id=\"example\"><a href=\"#example\" aria-hidden><span class=\"icon icon-link\"></span></a>Example</h2>\n<p>The following example will demonstrate everything covered up to this point:</p>\n<div pbl-example-view=\"pbl-focus-and-selection-example\"></div>\n"}