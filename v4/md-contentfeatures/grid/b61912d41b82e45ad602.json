{"id":"features/grid/global-settings","title":"Global Settings","contents":"<h1 id=\"global-settings\"><a href=\"#global-settings\" aria-hidden><span class=\"icon icon-link\"></span></a>Global Settings</h1>\n<p>The grid is configurable, either through <code class=\"language-text\">@Input</code> properties or directly through the grid instance. This is also valid for grid plugins (both built-in and third party).<br>\nIn most cases, all of the configurations comes with default settings, which you can override using the global settings.</p>\n<p>The settings are split into groups, each group contains a collection of relevant settings within it's context.<br>\nThe grid itself has only <strong>one</strong> group, called <code class=\"language-text\">table</code></p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n Group names are strictly typed, to add a new group the type requires augmentation.\n</blockquote>\n<p>To access the global configuration we use the <code class=\"language-text\">PblNgridConfigService</code> service:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NgModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PblNgridConfigService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/ngrid'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">NgModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">/** Module definition here... */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyRootModule</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>gridConfig<span class=\"token operator\">:</span> PblNgridConfigService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gridConfig<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'table'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      showHeader<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      showFooter<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      noFiller<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// automatically enable target events plugin on all grids.</span>\n    <span class=\"token comment\">// Eliminates the need to use the `[targetEvents]` directive.</span>\n    gridConfig<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'targetEvents'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      autoEnable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gridConfig<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'YOUR GROUP NAME HERE'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* Group specific configuration here... */</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>The <code class=\"language-text\">set</code> methods accepts 2 parameters, the 1st is the name of the settings group and the 2nd parameter is the settings object for that group.\nThe grid's core settings are under the <code class=\"language-text\">table</code> group name, other plugins might add additional groups</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n There is no need to define \n<code class=\"language-text\">PblNgridConfigService</code>\n in the providers, it is done by the grid's module.\n</blockquote>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n For plugins, the plugin author is responsible for adding the support for default settings assignment, they might choose not to do it or allow partial settings to be applied.\n</blockquote>\n<h2 id=\"additional-groups\"><a href=\"#additional-groups\" aria-hidden><span class=\"icon icon-link\"></span></a>Additional Groups</h2>\n<p>The reason for grouping the settings is to allow extensions/plugins to accept global settings using the same method in the grid.</p>\n<p>This will contribute to a single, agreed upon, way of defining and consuming settings throughout the grid's eco-system.</p>\n<h2 id=\"collisions\"><a href=\"#collisions\" aria-hidden><span class=\"icon icon-link\"></span></a>Collisions</h2>\n<p>Some plugins might provide a global configuration option and a local, instance/directive level options.</p>\n<p>If this is the case, it is up to the author of the plugin to determine which option value to use.</p>\n<p>In all of n<strong>Grid</strong> APIs (including plugins) the more specific option wins, that is a global option\nwith a counterpart directive <code class=\"language-text\">@Input</code>, the directive input (if set) will be used.</p>\n"}