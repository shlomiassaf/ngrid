{"id":"recipes/global-templates","title":"Global Templates","contents":"<h1 id=\"global-templates\"><a href=\"#global-templates\" aria-hidden><span class=\"icon icon-link\"></span></a>Global Templates</h1>\n<p><strong>nGrid</strong> provides a smart registry which enables template registration at multiple levels.</p>\n<p>In most application a single top-level template registry is enough which means we only need to register templates once, outside of a grid\nand have them ready to be used by the grid.</p>\n<p>This can be done by creating a component which does nothing but declaring and registering templates.<br>\nWe can also use the component's class to apply logic, if required.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n When implementing logic in such components note that the class instance is actually a singleton and it is shared across the application.\n</blockquote>\n<div pbl-example-view=\"pbl-global-templates-example\"></div>\n<p>You could simple render the component in your root application's component template, once for all application.\nYou can also do it using <strong>nGrid</strong> by importing the <strong>nGrid</strong> module:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">PblNgridModule<span class=\"token punctuation\">.</span><span class=\"token function\">withCommon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> component<span class=\"token operator\">:</span> CommonGridTemplatesComponent <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div></div>\n<p>Where <code class=\"language-text\">CommonGridTemplatesComponent</code> is the component with the templates.</p>\n<p>If you have an application with multiple modules where you need some modules to have different templates or style\nall you need to do is import with <code class=\"language-text\">withCommon</code> as shown above and also add a new registry level:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">@<span class=\"token function\">NgModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  declarations<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> CommonGridTemplatesComponent <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    PblNgridModule<span class=\"token punctuation\">.</span><span class=\"token function\">withCommon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> component<span class=\"token operator\">:</span> CommonGridTemplatesComponent <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> PblNgridRegistryService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// NEW REGISTRY LEVEL</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyModule</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>Providing a new <code class=\"language-text\">PblNgridRegistryService</code> will make sure that when <code class=\"language-text\">CommonGridTemplatesComponent</code> is created it will\nget a fresh new registry layer hence not overriding previous templates.</p>\n<p>All components registered in <code class=\"language-text\">MyModule</code> will render grid's that use registries which are children of our new registry hence using the new templates!</p>\n"}