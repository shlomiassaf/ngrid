{"id":"recipes/column-header-menu","title":"Column Header Menu","contents":"<h1 id=\"column-header-menu\"><a href=\"#column-header-menu\" aria-hidden><span class=\"icon icon-link\"></span></a>Column Header Menu</h1>\n<p>The main column header row can be extended in 2 ways, using a template or using a component.</p>\n<p>If you hover over the header row you will see a <strong>resize</strong> handler, this is provided by the <code class=\"language-text\">@pebula/drag</code> plugin and it is using a <strong>template</strong> extension to inject\nthe resizer internally.</p>\n<p>If you click on the <strong>name</strong> column you will see it is sorted now, with a sort indicator presented. This is provided by the <code class=\"language-text\">@pebula/ngrid-material/sort</code> plugin\nand it is using a <strong>component</strong> extension to inject the <code class=\"language-text\">MatSortHeader</code> component from <code class=\"language-text\">@angular/material/sort</code>.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n You can inspect the code in these plugins to get a better idea how it works.\n</blockquote>\n<p>Using a <strong>template</strong> extension is recommended in most cases. If you define it as the content of the grid it will be applied only for that grid\notherwise it will be applied globally (the scope of the registry).</p>\n<p>Using a <strong>component</strong> extension is recommended when you have a working component that you want to abstract, e.g. <code class=\"language-text\">MatSortHeader</code> is already built\nso it makes sense using it as is.</p>\n<p>For the purpose of this demo we will use a <strong>template</strong> extension because it require less boilerplate and less setup.</p>\n<div pbl-example-view=\"pbl-column-header-menu-example\"></div>\n<p>Most of the code lives in the template (html) and there no use of the component for the menu itself or how it functions.</p>\n<p>For a more complete solution it will probably be best to wrap the template inside a component and use that component inside grid's we want to have the menu in.\nThis way we can also pass parameters to the component before it generate and register the template.</p>\n<p>The menu is pure UI, so it doesn't make sense to include a built in menu with the core package. A menu is planed in <code class=\"language-text\">@pebula/ngrid-material</code> that uses\nmaterial components.</p>\n"}