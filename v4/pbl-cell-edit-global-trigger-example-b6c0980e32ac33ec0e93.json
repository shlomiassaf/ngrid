[{"parent":"CellEditGlobalTriggerExample","file":"cell-edit-global-trigger.component.ts","title":"Triggering edits globally","lang":"typescript","source":"import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { columnFactory, PblNgridCellContext } from '@pebula/ngrid';\nimport { createInfiniteScrollDS } from '@pebula/ngrid/infinite-scroll';\n\nimport { Person, DynamicClientApi } from '@pebula/apps/docs-app-lib/client-api';\n\n@Component({\n  selector: 'pbl-cell-edit-global-trigger-example',\n  templateUrl: './cell-edit-global-trigger.component.html',\n  styleUrls: ['./cell-edit-global-trigger.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CellEditGlobalTriggerExample {\n  columns = columnFactory()\n    .table(\n      { prop: 'id', width: '40px' },\n      { prop: 'name' },\n      { prop: 'gender', width: '50px' },\n      { prop: 'birthdate' },\n      { prop: 'lead', editable: true },\n    )\n    .build();\n  ds = createInfiniteScrollDS<Person>()\n  .withInfiniteScrollOptions({\n    blockSize: 50,\n    initialVirtualSize: 500,\n  })\n  .onTrigger( (event) => {\n    if (event.isInitial) {\n    event.updateTotalLength(500); // Assume we got a pagination object saying we have 1000 items\n    return this.datasource.getPeople(0, 50);\n  } else {\n    const total = event.fromRow + event.offset;\n    return this.datasource.getPeople(500 + Math.random() * 1000, total)\n      .then( people => {\n        return people.slice(event.fromRow, total); });\n    }\n  }).create();\n  // createDS<Person>().onTrigger( () => this.datasource.getPeople(0, 500) ).create();\n\n  constructor(private datasource: DynamicClientApi) { }\n\n  changeCheckbox(input: HTMLInputElement, ctx: PblNgridCellContext): void {\n    ctx.value = input.checked;\n    setTimeout( () => ctx.stopEdit(true) );\n  }\n}\n","contents":"<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChangeDetectionStrategy<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> ViewEncapsulation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> columnFactory<span class=\"token punctuation\">,</span> PblNgridCellContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/ngrid'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createInfiniteScrollDS <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/ngrid/infinite-scroll'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Person<span class=\"token punctuation\">,</span> DynamicClientApi <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/apps/docs-app-lib/client-api'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'pbl-cell-edit-global-trigger-example'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token operator\">:</span> <span class=\"token string\">'./cell-edit-global-trigger.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./cell-edit-global-trigger.component.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  encapsulation<span class=\"token operator\">:</span> ViewEncapsulation<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span>\n  changeDetection<span class=\"token operator\">:</span> ChangeDetectionStrategy<span class=\"token punctuation\">.</span>OnPush<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CellEditGlobalTriggerExample</span> <span class=\"token punctuation\">{</span>\n  columns <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token string\">'40px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token string\">'50px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'birthdate'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'lead'</span><span class=\"token punctuation\">,</span> editable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ds <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">createInfiniteScrollDS</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">withInfiniteScrollOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    blockSize<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n    initialVirtualSize<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>isInitial<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Assume we got a pagination object saying we have 1000 items</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>fromRow <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> people <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> people<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>fromRow<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// createDS&lt;Person>().onTrigger( () => this.datasource.getPeople(0, 500) ).create();</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> datasource<span class=\"token operator\">:</span> DynamicClientApi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">changeCheckbox</span><span class=\"token punctuation\">(</span>input<span class=\"token operator\">:</span> HTMLInputElement<span class=\"token punctuation\">,</span> ctx<span class=\"token operator\">:</span> PblNgridCellContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stopEdit</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"},{"parent":"CellEditGlobalTriggerExample","file":"./cell-edit-global-trigger.component.html","title":"./cell-edit-global-trigger.component.html","lang":"html","source":"<pbl-ngrid (cellClick)=\"$event.context.startEdit()\"\n           [dataSource]=\"ds\" [columns]=\"columns\">\n\n  <div *pblNgridCellEditorDef=\"'name'; let ctx\">\n    <input #input [value]=\"ctx.value\" [pblCellEditAutoFocus]=\"ctx\" (change)=\"ctx.value = input.value\" (blur)=\"ctx.stopEdit()\" />\n  </div>\n  <div *pblNgridCellEditorDef=\"'lead'; let ctx\">\n    <input #cb type=\"checkbox\" [checked]=\"ctx.value\"\n           [pblCellEditAutoFocus]=\"ctx\"\n           (change)=\"changeCheckbox(cb, ctx)\"\n           (blur)=\"ctx.stopEdit()\" />\n  </div>\n</pbl-ngrid>\n","contents":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid</span> <span class=\"token attr-name\">(cellClick)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$event.context.startEdit()<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">[dataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ds<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[columns]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>columns<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellEditorDef</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>name<span class=\"token punctuation\">'</span>; let ctx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">#input</span> <span class=\"token attr-name\">[value]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx.value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[pblCellEditAutoFocus]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(change)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx.value = input.value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(blur)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx.stopEdit()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">*pblNgridCellEditorDef</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>lead<span class=\"token punctuation\">'</span>; let ctx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">#cb</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[checked]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx.value<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">[pblCellEditAutoFocus]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">(change)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeCheckbox(cb, ctx)<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">(blur)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx.stopEdit()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>"}]