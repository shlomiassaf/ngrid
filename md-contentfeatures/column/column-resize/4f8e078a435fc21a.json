{"id":"features/column/column-resize","title":"Column Resize","contents":"<h1 id=\"column-resizing\"><a href=\"#column-resizing\" aria-hidden><span class=\"icon icon-link\"></span></a>Column Resizing</h1>\n<p>Changing the size of a column is supported programmatically (<code class=\"language-text\">ColumnApi</code>) and through the UI (mouse/touch) using the <code class=\"language-text\">drag</code> plugin.</p>\n<h2 id=\"using-the-columnapi\"><a href=\"#using-the-columnapi\" aria-hidden><span class=\"icon icon-link\"></span></a>Using the <code class=\"language-text\">ColumnApi</code></h2>\n<p>Resizing a column requires the column and the new width. The width can be set in pixels or percentage similar to the width property\nin the column definitions.</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  <span class=\"token function\">resizeColumn</span><span class=\"token punctuation\">(</span>column<span class=\"token operator\">:</span> PblColumn<span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<div pbl-example-view=\"pbl-resizing-with-the-api-example\"></div>\n<blockquote class=\"warn icon\">\n<div class=\"icon-location\"></div>\n \n<code class=\"language-text\">resizeColumn()</code>\n does not enforce business logic, It is up to the caller to implement such.\nFor example, the \n<code class=\"language-text\">drag</code>\n plugin will enforce the \n<code class=\"language-text\">resize</code>\n property to enable/disable resizing through mouse/touch. It will also\nenforce minWidth/maxWidth boundaries which the \n<code class=\"language-text\">resizeColumn()</code>\n ignores. \n</blockquote>\n<h2 id=\"using-the-drag-plugin\"><a href=\"#using-the-drag-plugin\" aria-hidden><span class=\"icon icon-link\"></span></a>Using the <code class=\"language-text\">drag</code> plugin</h2>\n<p>The <code class=\"language-text\">drag</code> plugin add support for column resizing through mouse or touch and the ability to define which columns are allowed to resize.\nLet's start with a simple example, enabling resize for columns <strong>name</strong> and <strong>gender</strong>:</p>\n<div pbl-example-view=\"pbl-column-resize-example\"></div>\n<p>To enable column resizing each column must have the <code class=\"language-text\">resize</code> property set to true.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n When we registered \n<code class=\"language-text\">PblNgridDragModule</code>\n we used \n<code class=\"language-text\">PblNgridDragModule.withDefaultTemplates()</code>\n which pre-loads\ndefault templates for the plugin to work out of the box, we will cover customization shortly.\n</blockquote>\n<p>The default template does not include a resize handler but it is there, hover over the right\nedges of one of the columns <strong>name</strong> OR <strong>gender</strong>  and try to resize them.</p>\n<blockquote class=\"warn icon\">\n<div class=\"icon-location\"></div>\n The \n<code class=\"language-text\">resize</code>\n property in the column definition is enforced by the \n<code class=\"language-text\">drag</code>\n plugin and not the \n<code class=\"language-text\">ColumnApi</code>\n, the API will\nresize any column ignoring business logic.\n</blockquote>\n<h3 id=\"resizing-constraints\"><a href=\"#resizing-constraints\" aria-hidden><span class=\"icon icon-link\"></span></a>Resizing constraints</h3>\n<p>Notice that you can resize the columns <strong>name</strong> and <strong>gender</strong> to any size, even to an invisible one.<br>\nTo provide boundaries use the <code class=\"language-text\">minWidth</code> and <code class=\"language-text\">maxWidth</code> properties in the column API.</p>\n<div pbl-example-view=\"pbl-resize-boundaries-example\"></div>\n<p>We've limited <strong>name</strong> to a minimum width of 100px and maximum width of 400px and <strong>gender</strong> to a minimum width of 50px.</p>\n<h3 id=\"customization-and-manual-control\"><a href=\"#customization-and-manual-control\" aria-hidden><span class=\"icon icon-link\"></span></a>Customization and manual control</h3>\n<p>At the beginning, we've mentioned that we opted in for the default templates, these allow easy setup of the resizing feature. To customize the\nbehavior and/or look of the resizing process we need override these templates.</p>\n<p>To override resizing we need to provide a template that the table will use to render the drag element that listen to all mouse/touch events\nand act upon them.</p>\n<p>To do that we use the structural directive <code class=\"language-text\">*pblNgridCellResizerRef</code>. This directive will automatically register the template for us\nand provide us with the <strong>column*</strong> and <strong>table</strong> instances as context:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PblNgridMetaCellTemplateContext<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  $implicit<span class=\"token operator\">:</span> PblNgridMetaCellTemplateContext<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  col<span class=\"token operator\">:</span> PblMetaColumn <span class=\"token operator\">|</span> PblColumn<span class=\"token punctuation\">;</span>\n  table<span class=\"token operator\">:</span> PblNgridComponent<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>The default resizing template in <code class=\"language-text\">PblNgridDragModule.withDefaultTemplates()</code> is fairly simple:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid-drag-resize</span> <span class=\"token attr-name\">*pblNgridCellResizerRef</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>let ctx<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[context]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid-drag-resize</span><span class=\"token punctuation\">></span></span></code></pre></div></div>\n<p>We use <code class=\"language-text\">*pblNgridCellResizerRef</code> to instruct the table which template to use pass the context to <code class=\"language-text\">pbl-ngrid-drag-resize</code> which does all the resizing business.</p>\n<p><code class=\"language-text\">pbl-ngrid-drag-resize</code> is a component that the plugin provides. It extends <code class=\"language-text\">CdkDrag</code> adding some logic for the resizing scenario.\nIt accepts a content which it will display, allowing you to control the handle's look and feel.</p>\n<div pbl-example-view=\"pbl-custom-resizing-example\"></div>\n<p>Notice how we also use groups in this example, resizing will cause the groups to follow.</p>\n<h3 id=\"manual-all-the-way\"><a href=\"#manual-all-the-way\" aria-hidden><span class=\"icon icon-link\"></span></a>Manual all the way</h3>\n<p>This is just our way of doing it, for complete custom handling, one might do:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-custom-drag-handler</span> <span class=\"token attr-name\">*pblNgridCellResizerRef</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>let ctx<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[table]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx.table<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[column]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ctx.col<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-custom-drag-handler</span><span class=\"token punctuation\">></span></span></code></pre></div></div>\n<p><code class=\"language-text\">my-custom-drag-handler</code> will be rendered on each header cell and should take care of all resizing logic.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n The \n<code class=\"language-text\">drag</code>\n plugin is using \n<code class=\"language-text\">@angular/cdk/drag</code>\n as the low level package for handling drag and drop, you can benefit from other\nfeatures this library offers when building you own custom solution.\n</blockquote>\n"}