{"id":"features/column/column-width","title":"Column Width","contents":"<h1 id=\"column-width\"><a href=\"#column-width\" aria-hidden><span class=\"icon icon-link\"></span></a>Column Width</h1>\n<p>Width is defined in the column definition's <strong>width</strong> property, which accepts an absolute pixel value (<code class=\"language-text\">10px</code>) or relative percent value (<code class=\"language-text\">10%</code>).</p>\n<p>In addition, the properties <strong>minWidth</strong> and <strong>maxWidth</strong> can be used to create min/max width boundaries on top of the <strong>width</strong> by providing\na numeric absolute (px) values of can be set (eg: <code class=\"language-text\">10</code>).</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n \n<strong>width</strong>\n, \n<strong>minWidth</strong>\n and \n<strong>maxWidth</strong>\n are \n<em>optional</em>\n, a column might set all, some or none, allowing powerful column sizing using multiple strategies.\n</blockquote>\n<h2 id=\"width\"><a href=\"#width\" aria-hidden><span class=\"icon icon-link\"></span></a>Width</h2>\n<p>There are 3 ways to define the <strong>width</strong>:</p>\n<ol>\n<li>Leaving it blank (auto-assigned by ngrid)</li>\n<li><strong>px</strong>, e.g. <code class=\"language-text\">50px</code></li>\n<li><strong>%</strong>, e.g. <code class=\"language-text\">20%</code></li>\n</ol>\n<h3 id=\"width-in-px\"><a href=\"#width-in-px\" aria-hidden><span class=\"icon icon-link\"></span></a>Width in PX</h3>\n<p>Setting the width in pixels (e.g.: <code class=\"language-text\">100px</code>) is static, the width is absolute and does not change.</p>\n<blockquote>\n<p>Note that if you set a <strong>minWidth</strong> that is larger then the <strong>width</strong>, the <strong>minWidth</strong> wins.</p>\n</blockquote>\n<h3 id=\"width-in-\"><a href=\"#width-in-\" aria-hidden><span class=\"icon icon-link\"></span></a>Width in %</h3>\n<p>Setting the width in percentage (e.g.: <code class=\"language-text\">33%</code>) is dynamic, the width is relative to the width of the container.</p>\n<p>In this mode the width boundaries <strong>minWidth</strong> and <strong>maxWidth</strong> can play an important role in the final width of the column</p>\n<h3 id=\"automatic-width\"><a href=\"#automatic-width\" aria-hidden><span class=\"icon icon-link\"></span></a>Automatic width</h3>\n<p>When a column does not have a specific <strong>width</strong> set <strong>nGrid</strong> will automatically assign a width to it.</p>\n<p><strong>nGrid</strong> will analyze all columns and calculate the width available to all columns without a specific width assigned\nand produce a single width value that is evenly spread among all columns without a width assigned.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n All column without a width will get the same width\n</blockquote>\n<p>In the example below we set the following width's:</p>\n<table>\n<thead>\n<tr>\n<th>Column Name</th>\n<th>id</th>\n<th>name</th>\n<th>email</th>\n<th>country</th>\n<th>language</th>\n<th>TZ</th>\n<th>balance</th>\n<th>gender</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Definition</td>\n<td>50px</td>\n<td>25%</td>\n<td>Blank</td>\n<td>35%</td>\n<td>Blank</td>\n<td>30px</td>\n<td>Blank</td>\n<td>Blank</td>\n</tr>\n</tbody>\n</table>\n<p>We set the width of <strong>id</strong> and <strong>rate</strong> to absolute values, <strong>name</strong> and <strong>country</strong> to a relative value and 4 other blank columns, without width.\nIf you resize the browser you will see that <strong>id</strong> and <strong>rate</strong> remain fixed while <strong>name</strong> and <strong>country</strong> and all 4 blank width columns\nwill expand/shrink accordingly.</p>\n<div pbl-example-view=\"pbl-column-width-example-component\"></div>\n<p>Let's review the CSS width assigned to each column:</p>\n<table>\n<thead>\n<tr>\n<th>Column Name</th>\n<th>id</th>\n<th>name</th>\n<th>email</th>\n<th>country</th>\n<th>language</th>\n<th>TZ</th>\n<th>balance</th>\n<th>gender</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Definition</td>\n<td>50px</td>\n<td>25%</td>\n<td>Blank</td>\n<td>35%</td>\n<td>Blank</td>\n<td>30px</td>\n<td>Blank</td>\n<td>Blank</td>\n</tr>\n<tr>\n<td>Result</td>\n<td>50px</td>\n<td>25%</td>\n<td>calc(10% - 20px)</td>\n<td>35%</td>\n<td>calc(10% - 20px)</td>\n<td>30px</td>\n<td>calc(10% - 20px)</td>\n<td>calc(10% - 20px)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"minimum--maximum-width\"><a href=\"#minimum--maximum-width\" aria-hidden><span class=\"icon icon-link\"></span></a>Minimum / Maximum Width</h2>\n<p>The minimum width is an absolute value, it is set as a number and represent the absolute minimum width in pixels.\nBecause a column width can not be lower then the minimum width, setting a minimum width will also effect the minimum width of the table.</p>\n<p>For example, if we have 4 columns, each with a minimum width of 300 pixels and our table's width is 1000 pixels we will see a horizontal scroll bar\nbecause the actual table size is 1200 which is 4 columns X 300px.</p>\n<p>The maximum width is an absolute value, it is set as a number and represent the absolute maximum width in pixels.\nWe usually want to set a maximum value when the <strong>width</strong> is set in percentage (e.g. <code class=\"language-text\">40%</code>), this will limit to total width of the column.</p>\n<p>When a column reach it's maximum width it behaves like a column with fixed absolute width (i.e. a column with <code class=\"language-text\">width</code> set in pixels)</p>\n<table>\n<thead>\n<tr>\n<th>Column Name</th>\n<th>id</th>\n<th>name</th>\n<th>email</th>\n<th>country</th>\n<th>language</th>\n<th>TZ</th>\n<th>balance</th>\n<th>gender</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Definition</td>\n<td>50px</td>\n<td>25%</td>\n<td>Blank [minWidth: 250]</td>\n<td>35%</td>\n<td>Blank [maxWidth: 50]</td>\n<td>30px</td>\n<td>Blank</td>\n<td>Blank</td>\n</tr>\n</tbody>\n</table>\n<div pbl-example-view=\"pbl-min-column-width-example-component\"></div>\n"}