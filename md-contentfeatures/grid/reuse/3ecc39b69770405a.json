{"id":"features/grid/reuse","title":"Reuse","contents":"<h1 id=\"table-re-use\"><a href=\"#table-re-use\" aria-hidden><span class=\"icon icon-link\"></span></a>Table Re-Use</h1>\n<p>Reusing of a table refers to changing the model that the table represents.</p>\n<p>Looking at the following column factory the model is quite clear:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'email'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>For this column definition set, the table expects a similar collection of objects returned from the data source.</p>\n<p>The datasource is dynamic, returning values per demand.</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token generic-function\"><span class=\"token function\">createDS</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span> email<span class=\"token operator\">:</span> <span class=\"token string\">'N/A'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div>\n<p>Now, if we want to apply a different model on the table? We will have to change the column definition set as well at the datasource.</p>\n<p>In the following example the table can toggle between showing a <strong>Person</strong> model or a <strong>Seller</strong> model.</p>\n<div pbl-example-view=\"pbl-reuse-example\"></div>\n<p>When we toggle, notice that we swap the entire datasource. We could have implemented the logic inside the <code class=\"language-text\">onTrigger</code> handler and keep a single datasource but it will not work.</p>\n<p>When we swap a datasource the table will cleanup the context and all column related data and rebuilt it preventing ghost context living in the cache.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n When a table gets destroyed (\n<code class=\"language-text\">ngOnDestroy</code>\n) the datasource attached to it (if attached) is disconnected and automatically disposed. This has 1 exception, the \n<code class=\"language-text\">keepAlive</code>\n configuration was enabled on the datasource.\n</blockquote>\n<blockquote class=\"warn icon\">\n<div class=\"icon-location\"></div>\n When you swap the datasource it will also cause the previous datasource to disconnect, if \n<code class=\"language-text\">keepAlive</code>\n is \n<code class=\"language-text\">false</code>\n it will also dispose itself.\n</blockquote>\n"}