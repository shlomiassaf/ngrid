// CLONE from https://github.com/angular/components/blob/11a4ff0a6d08e225d4b1f70d21bb0dde8011ae9a/src/material/core/typography/_typography.scss
@import './typography-utils';

// Represents a typography level from the Material design spec.
@function pbl-typography-level(
  $font-size,
  $line-height: $font-size,
  $font-weight: 400,
  $font-family: null,
  $letter-spacing: null) {

  @return (
    font-size: $font-size,
    line-height: $line-height,
    font-weight: $font-weight,
    font-family: $font-family,
    letter-spacing: $letter-spacing
  );
}

// Represents a collection of typography levels.
// Defaults come from https://material.io/guidelines/style/typography.html
// Note: The spec doesn't mention letter spacing. The values here come from
// eyeballing it until it looked exactly like the spec examples.
@function pbl-typography-config(
  $font-family:   'Roboto, "Helvetica Neue", sans-serif',
  $display-4:     pbl-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),
  $display-3:     pbl-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),
  $display-2:     pbl-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),
  $display-1:     pbl-typography-level(34px, 40px, 400),
  $headline:      pbl-typography-level(24px, 32px, 400),
  $title:         pbl-typography-level(20px, 32px, 500),
  $subheading-2:  pbl-typography-level(16px, 28px, 400),
  $subheading-1:  pbl-typography-level(15px, 24px, 400),
  $body-2:        pbl-typography-level(14px, 24px, 500),
  $body-1:        pbl-typography-level(14px, 20px, 400),
  $caption:       pbl-typography-level(12px, 20px, 400),
  $button:        pbl-typography-level(14px, 14px, 500),
  // Line-height must be unit-less fraction of the font-size.
  $input:         pbl-typography-level(inherit, 1.125, 400)
) {

  // Declare an initial map with all of the levels.
  $config: (
    display-4:      $display-4,
    display-3:      $display-3,
    display-2:      $display-2,
    display-1:      $display-1,
    headline:       $headline,
    title:          $title,
    subheading-2:   $subheading-2,
    subheading-1:   $subheading-1,
    body-2:         $body-2,
    body-1:         $body-1,
    caption:        $caption,
    button:         $button,
    input:          $input,
  );

  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.
  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.
  @each $key, $level in $config {
    @if map-get($level, font-family) == null {
      $new-level: map-merge($level, (font-family: $font-family));
      $config: map-merge($config, ($key: $new-level));
    }
  }

  // Add the base font family to the config.
  @return map-merge($config, (font-family: $font-family));
}
