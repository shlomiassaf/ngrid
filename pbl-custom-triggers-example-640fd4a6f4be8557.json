[{"parent":"CustomTriggersExample","file":"custom-triggers.component.ts","title":"Custom Triggers","lang":"typescript","source":"import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { columnFactory } from '@pebula/ngrid';\nimport { createInfiniteScrollDS } from '@pebula/ngrid/infinite-scroll';\n\nimport { Person, DynamicRestClientApi } from '@pebula/apps/docs-app-lib/client-api';\n\n@Component({\n  selector: 'pbl-custom-triggers-example',\n  templateUrl: './custom-triggers.component.html',\n  styleUrls: ['./custom-triggers.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomTriggersExample {\n  columns = columnFactory()\n  .table(\n    { prop: 'id', width: '100px', pIndex: true },\n    { prop: 'name', width: '100px' },\n    { prop: 'gender', width: '50px' },\n    { prop: 'birthdate', type: 'date', width: '25%' },\n  )\n  .build();\n\nds = createInfiniteScrollDS<Person>()\n  .withInfiniteScrollOptions({\n    blockSize: 100,\n    initialVirtualSize: 100,\n  })\n  .withCacheOptions('fragmentedBlocks', { strictPaging: false })\n  .setCustomTriggers('filter', 'sort') // pagination is simply ignored in this case\n  .onTrigger(event => {\n    if (event.isInitial) {\n      this.ds.setCacheSize(200 * 4);\n      return this.client.getPeople({ pagination: { skip: 0, limit: 100 } })\n      .then( resp => {\n        this.ds.updateVirtualSize(resp.pagination.totalItems);\n        event.updateTotalLength(resp.pagination.totalItems);\n        return resp.items;\n      });\n    } else {\n      switch (event.eventSource) {\n        case 'infiniteScroll':\n          return this.client.getPeople({\n            pagination: { skip: event.fromRow, limit: event.toRow - event.fromRow + 1},\n          }).then( resp => resp.items );\n        case 'customTrigger':\n          if (event.sort.changed) {\n            // handle sort, go to server and ask to sort\n          } else if (event.filter.changed) {\n            // handle filter, go to server and ask to filter\n          }\n          break;\n        default:\n          throw new Error('This should NEVER EVENT happen...');\n      }\n    }\n  })\n  .create();\n\n  constructor(private client: DynamicRestClientApi) { }\n}\n","contents":"<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChangeDetectionStrategy<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> ViewEncapsulation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> columnFactory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/ngrid'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createInfiniteScrollDS <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/ngrid/infinite-scroll'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Person<span class=\"token punctuation\">,</span> DynamicRestClientApi <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/apps/docs-app-lib/client-api'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'pbl-custom-triggers-example'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token operator\">:</span> <span class=\"token string\">'./custom-triggers.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./custom-triggers.component.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  encapsulation<span class=\"token operator\">:</span> ViewEncapsulation<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span>\n  changeDetection<span class=\"token operator\">:</span> ChangeDetectionStrategy<span class=\"token punctuation\">.</span>OnPush<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTriggersExample</span> <span class=\"token punctuation\">{</span>\n  columns <span class=\"token operator\">=</span> <span class=\"token function\">columnFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token string\">'100px'</span><span class=\"token punctuation\">,</span> pIndex<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token string\">'100px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token string\">'50px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> prop<span class=\"token operator\">:</span> <span class=\"token string\">'birthdate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'date'</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token string\">'25%'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nds <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">createInfiniteScrollDS</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">withInfiniteScrollOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    blockSize<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    initialVirtualSize<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">withCacheOptions</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fragmentedBlocks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> strictPaging<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setCustomTriggers</span><span class=\"token punctuation\">(</span><span class=\"token string\">'filter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sort'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// pagination is simply ignored in this case</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onTrigger</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>isInitial<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ds<span class=\"token punctuation\">.</span><span class=\"token function\">setCacheSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> pagination<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> skip<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> limit<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> resp <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ds<span class=\"token punctuation\">.</span><span class=\"token function\">updateVirtualSize</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>pagination<span class=\"token punctuation\">.</span>totalItems<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">updateTotalLength</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>pagination<span class=\"token punctuation\">.</span>totalItems<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> resp<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>eventSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'infiniteScroll'</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span><span class=\"token function\">getPeople</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            pagination<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> skip<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>fromRow<span class=\"token punctuation\">,</span> limit<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>toRow <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>fromRow <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> resp <span class=\"token operator\">=></span> resp<span class=\"token punctuation\">.</span>items <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'customTrigger'</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">.</span>changed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// handle sort, go to server and ask to sort</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span>changed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// handle filter, go to server and ask to filter</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This should NEVER EVENT happen...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> client<span class=\"token operator\">:</span> DynamicRestClientApi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"},{"parent":"CustomTriggersExample","file":"./custom-triggers.component.html","title":"./custom-triggers.component.html","lang":"html","source":"<pbl-ngrid [dataSource]=\"ds\" [columns]=\"columns\"></pbl-ngrid>\n","contents":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-ngrid</span> <span class=\"token attr-name\">[dataSource]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ds<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[columns]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>columns<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-ngrid</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>"}]